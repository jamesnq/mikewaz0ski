// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGO_URI")
}

enum BuyerPlatform {
  Discord
  Telegram
  Facebook
}

model Buyer {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId
  platform       BuyerPlatform
  platformUserId String
  username       String?
  Orders         Order[]
  Wallet         Wallet?       @relation(fields: [walletId], references: [id])
  walletId       String?       @db.ObjectId

  @@unique([platform, platformUserId])
}

enum TransactionType {
  Deposit
  W2W // Wallet to Wallet
}

model TransactionHistory {
  id              String          @id @default(auto()) @map("_id") @db.ObjectId
  amount          Float
  type            TransactionType
  createdAt       DateTime        @default(now())
  sendWallet      Wallet?         @relation("sendWallet", fields: [sendWalletId], references: [id])
  sendWalletId    String?         @db.ObjectId
  receiveWallet   Wallet          @relation("receiveWallet", fields: [receiveWalletId], references: [id])
  receiveWalletId String          @db.ObjectId
}

model Wallet {
  id      String  @id @default(auto()) @map("_id") @db.ObjectId
  balance Float   @default(0)
  Buyers  Buyer[]

  sendWallet    TransactionHistory[] @relation("sendWallet")
  receiveWallet TransactionHistory[] @relation("receiveWallet")
}

enum OrderStatus {
  Pending
  InQueue
  InProcess
  Completed
  Cancelled
}

enum OderType {
  BrawlCoins
  YoutubePremium
  Spotify
  DiscordNitro
}

model Order {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  type      OderType
  Buyer     Buyer       @relation(fields: [buyerId], references: [id])
  buyerId   String      @db.ObjectId
  data      Json
  status    OrderStatus @default(Pending)
  createdAt DateTime    @default(now())
}
